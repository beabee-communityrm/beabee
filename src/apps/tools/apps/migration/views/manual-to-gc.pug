extends /views/base.pug

block prepend js
  script(src='/static/js/lib/quill.min.js')

block append css
  link(rel='stylesheet' href='/static/css/lib/quill.snow.css')

block prepend title
  - title = 'Email to manual contributors'

block contents
  .row
    .col-md-12
      +page_header('Email to manual contributors')

  .row
    .col-md-8
      p.
        This tool will email all your manual contributors with a link to convert
        their contribution to GoCardless. If they've never logged in before they
        will also be able to set a password for their account.

      p.
        The first payment date of their new contribution is calculated using the
        following rules:

      ol
        li
          p.
            Members with an expiring membership will have their first payment
            taken on the date it expires
          p
            | You have 
            |
            a(href='/members?rules={"condition"%3A"AND"%2C"rules"%3A[{"id"%3A"membershipExpires"%2C"field"%3A"membershipExpires"%2C"type"%3A"datetime"%2C"input"%3A"text"%2C"operator"%3A"greater"%2C"value"%3A"%24now"}%2C{"id"%3A"contributionType"%2C"field"%3A"contributionType"%2C"type"%3A"string"%2C"input"%3A"select"%2C"operator"%3A"equal"%2C"value"%3A"Manual"}]%2C"valid"%3Atrue}&sort=lf_ASC&type=advanced').
              #{expiringMembers} manual contributor(s)
            |
            | with an expiring membership
        li
          p.
            Monthly contributors with a non-expiring membership will have their
            first payment taken a month after they convert

          p
            | You have
            | 
            a(href='/members?rules=%7B%22condition%22%3A%22AND%22%2C%22rules%22%3A%5B%7B%22id%22%3A%22membershipExpires%22%2C%22field%22%3A%22membershipExpires%22%2C%22type%22%3A%22datetime%22%2C%22input%22%3A%22text%22%2C%22operator%22%3A%22is_null%22%2C%22value%22%3Anull%7D%2C%7B%22id%22%3A%22contributionType%22%2C%22field%22%3A%22contributionType%22%2C%22type%22%3A%22string%22%2C%22input%22%3A%22select%22%2C%22operator%22%3A%22equal%22%2C%22value%22%3A%22Manual%22%7D%2C%7B%22id%22%3A%22contributionPeriod%22%2C%22field%22%3A%22contributionPeriod%22%2C%22type%22%3A%22string%22%2C%22input%22%3A%22select%22%2C%22operator%22%3A%22equal%22%2C%22value%22%3A%22monthly%22%7D%5D%2C%22valid%22%3Atrue%7D&sort=lf_ASC&type=advanced').
              #{nonExpiringMonthlyMembers} manual contributors(s)
            |
            | with a non-expiring monthly membership
        li
          p.
            Annual contributors with a non-expiring membership #[b will not] be
            able to convert their contribution.

          p
            | You have
            |
            a(href='/members?rules=%7B%22condition%22%3A%22AND%22%2C%22rules%22%3A%5B%7B%22id%22%3A%22membershipExpires%22%2C%22field%22%3A%22membershipExpires%22%2C%22type%22%3A%22datetime%22%2C%22input%22%3A%22text%22%2C%22operator%22%3A%22is_null%22%2C%22value%22%3Anull%7D%2C%7B%22id%22%3A%22contributionType%22%2C%22field%22%3A%22contributionType%22%2C%22type%22%3A%22string%22%2C%22input%22%3A%22select%22%2C%22operator%22%3A%22equal%22%2C%22value%22%3A%22Manual%22%7D%2C%7B%22id%22%3A%22contributionPeriod%22%2C%22field%22%3A%22contributionPeriod%22%2C%22type%22%3A%22string%22%2C%22input%22%3A%22select%22%2C%22operator%22%3A%22equal%22%2C%22value%22%3A%22annually%22%7D%5D%2C%22valid%22%3Atrue%7D&sort=lf_ASC&type=advanced').
              #{nonExpiringAnnualMembers} manual contributors(s)
            |
            | with a non-expiring annual membership

      hr

      h4 Send email

      if nonExpiringAnnualMembers > 0
        .alert.alert-warning.
          #{nonExpiringAnnualMembers} member(s) with a non-expiring annual
          contribution will not be sent an email

      form(method='POST').form-horizontal
        +csrf

        - systemEmails = ['convert-manual-to-gc']
        include /apps/tools/apps/emails/views/partials/email-fields

        .row: .col-md-offset-3.col-md-9
          p.
            You should include at least one #[code *|CONVERTLINK|*] merge tag.

          p
            .checkbox-inline
              label
                input(type='checkbox' required)
                | Are you ready to send?

          p: button.btn.btn-danger Send

